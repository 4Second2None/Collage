
# Copyright (c) 2010 Cedric Stalder <cedric.stalder@gmail.ch>
#               2011-2012 Stefan Eilemann <eile@eyescale.ch>
#               2012 Daniel Nachbaur <danielnachbaur@gmail.com>

set(CO_PUBLIC_HEADERS
  api.h
  array.h
  barrier.h
  bufferConnection.h
  co.h
  command.h
  commandFunc.h
  commandQueue.h
  commands.h
  compressor.h
  compressorInfo.h
  connection.h
  connectionDescription.h
  connectionSet.h
  connectionType.h
  cpuCompressor.h
  customCommand.h
  customOCommand.h
  dataIStream.h
  dataIStream.ipp
  dataIStreamArchive.h
  dataIStreamArchive.ipp
  dataOStream.h
  dataOStream.ipp
  dataOStreamArchive.h
  dataOStreamArchive.ipp
  dataStreamArchiveException.h
  defines.h
  dispatcher.h
  exception.h
  global.h
  init.h
  instanceCache.h
  localNode.h
  log.h
  node.h
  oCommand.h
  nodeType.h
  object.h
  objectFactory.h
  objectHandler.h
  objectCommand.h
  objectOCommand.h
  objectMap.h
  objectVersion.h
  plugin.h
  pluginRegistry.h
  queueCommand.h
  queueMaster.h
  queueItem.h
  queueSlave.h
  serializable.h
  types.h
  worker.h
  worker.ipp
  zeroconf.h
  )

set(CO_HEADERS
  barrierCommand.h
  buffer.h
  bufferCache.h
  connectionListener.h
  dataStreamArchive.h
  dataIStreamQueue.h
  deltaMasterCM.h
  eventConnection.h
  fullMasterCM.h
  masterCMCommand.h
  nodeCommand.h
  nullCM.h
  objectCM.h
  objectDataCommand.h
  objectDataOCommand.h
  objectDataIStream.h
  objectDataOStream.h
  objectDeltaDataOStream.h
  objectInstanceDataOStream.h
  objectSlaveDataOStream.h
  objectStore.h
  pipeConnection.h
  rspConnection.h
  socketConnection.h
  staticMasterCM.h
  staticSlaveCM.h
  unbufferedMasterCM.h
  versionedMasterCM.h
  versionedSlaveCM.h
  )

set(CO_SOURCES
  barrier.cpp
  buffer.cpp
  bufferCache.cpp
  bufferConnection.cpp
  command.cpp
  commandQueue.cpp
  compressor.cpp
  connection.cpp
  connectionDescription.cpp
  connectionSet.cpp
  cpuCompressor.cpp
  customCommand.cpp
  customOCommand.cpp
  dataIStream.cpp
  dataIStreamQueue.cpp
  dataOStream.cpp
  deltaMasterCM.cpp
  dispatcher.cpp
  eventConnection.cpp
  fullMasterCM.cpp
  global.cpp
  init.cpp
  instanceCache.cpp
  localNode.cpp
  masterCMCommand.cpp
  node.cpp
  oCommand.cpp
  object.cpp
  objectCM.cpp
  objectDataIStream.cpp
  objectDataOStream.cpp
  objectDeltaDataOStream.cpp
  objectDataCommand.cpp
  objectDataOCommand.cpp
  objectCommand.cpp
  objectOCommand.cpp
  objectInstanceDataOStream.cpp
  objectMap.cpp
  objectSlaveDataOStream.cpp
  objectStore.cpp
  objectVersion.cpp
  pipeConnection.cpp
  plugin.cpp
  pluginRegistry.cpp
  queueItem.cpp
  queueMaster.cpp
  queueSlave.cpp
  serializable.cpp
  socketConnection.cpp
  staticSlaveCM.cpp
  unbufferedMasterCM.cpp
  version.cpp
  versionedMasterCM.cpp
  versionedSlaveCM.cpp
  worker.cpp
  zeroconf.cpp
  )

set(CO_COMPRESSORS
  compressor/compressor.cpp
  compressor/compressor.h
  compressor/compressorFastLZ.cpp
  compressor/compressorFastLZ.h
  compressor/compressorLZF.cpp
  compressor/compressorLZF.h
  compressor/compressorRLE.ipp
  compressor/compressorRLE10A2.cpp
  compressor/compressorRLE10A2.h
  compressor/compressorRLE4B.cpp
  compressor/compressorRLE4B.h
  compressor/compressorRLE4BU.cpp
  compressor/compressorRLE4BU.h
  compressor/compressorRLE4HF.cpp
  compressor/compressorRLE4HF.h
  compressor/compressorRLE565.cpp
  compressor/compressorRLE565.h
  compressor/compressorRLEB.cpp
  compressor/compressorRLEB.h
  compressor/compressorRLEYUV.cpp
  compressor/compressorRLEYUV.h
  compressor/compressorSnappy.cpp
  compressor/compressorSnappy.h
  compressor/fastlz/fastlz.c
  compressor/fastlz/fastlz.h
  compressor/liblzf/lzf.h
  compressor/liblzf/lzf_c.c
  compressor/liblzf/lzf_d.c
  compressor/snappy/snappy.h
  compressor/snappy/snappy.cc
  compressor/snappy/snappy-sinksource.cc
  )

set(PLUGIN_HEADERS
  plugins/compressor.h
  plugins/compressorTokens.h
  plugins/compressorTypes.h
  )

if(WIN32)
  list(APPEND CO_HEADERS namedPipeConnection.h)
  list(APPEND CO_SOURCES namedPipeConnection.cpp)
else()
  list(APPEND CO_HEADERS fdConnection.h)
  list(APPEND CO_SOURCES fdConnection.cpp)
endif()
